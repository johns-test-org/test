# This is a basic workflow to help you get started with Actions

name: Keep priority labels in sync

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  issues:
    types:
      - labeled

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check_priority: 
    if: |
      contains(github.event.issue.labels.*.name, '[Pri] TBD') || 
      contains(github.event.issue.labels.*.name, '[Pri] Low') || 
      contains(github.event.issue.labels.*.name, '[Pri] Normal') ||
      contains(github.event.issue.labels.*.name, '[Pri] High') ||
      contains(github.event.issue.labels.*.name, '[Pri] BLOCKER')
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Get project data
        env:
#           GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORGANIZATION: john-legg
          PROJECT_NUMBER: 1
          PRIORITY_FIELD_ID: 52539592
          ISSUE_ID: ${{ github.event.issue.number }}
        run: echo Hello, world! $ISSUE_ID
        
#       - name: Set fields
# #         env:
# #           GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
#         run: |
#           gh api graphql -f query='
#             mutation (
#               $project: ID!
#               $item: ID!
#               $status_field: ID!
#               $status_value: String!
#               $date_field: ID!
#               $date_value: Date!
#             ) {
#               set_status: updateProjectV2ItemFieldValue(input: {
#                 projectId: $PROJECT_NUMBER
#                 itemId: $item
#                 fieldId: $status_field
#                 value: {
#                   singleSelectOptionId: $status_value
#                   }
#               }) {
#                 projectV2Item {
#                   id
#                   }
#               }
              
#             }
            
          
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! $PRIORITY_FIELD_ID

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      
