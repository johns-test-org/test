# Updates the Priority field on a Project board when a [Pri] label gets added to an issue.

name: Keep priority labels in sync

# Controls when the workflow will run
on:
  # Triggers the workflow when labels are added to an issue
  issues:
    types:
      - labeled

env:
  LABEL_PREFIX: "[Pri] "
  PROJECT_NUMBER: 1
  PROJECT_FIELD: "Priority"
  ORGANIZATION: "johns-test-org"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Updates the Priority field with the appropriate priority level
  check_priority: 

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    #Unfortuantely, I can't use the environment variable here
    if:  contains(github.event.label.name, '[Pri]')

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PEM }} 

      - name: Check if issue is in project
        env:
            GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
            ISSUE_ID: ${{ github.event.issue.node_id }}
        run: |
          gh api graphql -f query='
            query($id: ID!){
              node(id: $id) {
              ... on Issue {
                  projectItems(first: 10) {
                    ... on ProjectV2ItemConnection {
                      nodes {
                        ... on ProjectV2Item {
                          project {
                            ... on ProjectV2 {
                              number
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }' -f id=$ISSUE_ID > project_data.json
          cat project_data.json
          echo 'ISSUE_PROJECTS='$(jq '.data.node.projectItems.nodes' project_data.json) >> $GITHUB_ENV
          echo 'THE_ID='$(jq '.data.node.projectItems.nodes[] | .project.number' project_data.json) >> $GITHUB_ENV
          echo $ISSUE_PROJECTS

      - name: Get priority
        id: get_priority
        env:
          PRIORITY_LABEL: ${{github.event.label.name}}
        run: |
          prefix="${{env.LABEL_PREFIX}}"
          label="${{github.event.label.name}}"
          priority=${label#"$prefix"}
          echo "PRIORITY_LABEL=$priority" >> $GITHUB_ENV
          echo $PRIORITY_LABEL
          echo $ISSUE_PROJECTS
          echo $THE_ID

      - name: Update project field
        id: update_project_field
        uses: github/update-project-action@v2
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          organization: ${{ env.ORGANIZATION }}
          project_number: ${{ env.PROJECT_NUMBER }}
          field: ${{ env.PROJECT_FIELD }}
          content_id: ${{ github.event.issue.node_id }}
          value: ${{ env.PRIORITY_LABEL }}
          
      
